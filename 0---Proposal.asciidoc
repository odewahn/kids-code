= Import future: Practical projects for parents and children to do together

== Proposal

=== Summary

I spend a good amount of time travelling around the country, teaching kids to code in Python. Parents will often contact me, asking me how they can help their kids learn to code at their side. They want to share something that gives them so much joy and opens so many doors, but many are uncertain where to start. 

There are books that teach children to code, but not every child can learn this way. Some might need to be able to ask questions. Some stay on task better when an adult is involved. Some may simply enjoy the activity better when doing it with someone else. 

This book not only teaches the child to code in Python, but it also teaches the parent *how* to help their child along. The book includes both lessons and projects that are intended for a student and expert to go over together. Each chapter provides pointers to the expert on where a student might get stuck and how best to help them, as well as completed code samples for the student to play with. All projects also start with stub code, which tends to be much less intimidating for a young learner to work with.

This book does assume that the parent is a developer, and teaches the child Python. There will be a brief introduction to Python for the parent coder who is more familiar with another language. However, a non-coder parent can also work through the exercises, provided they read the chapter as well. Even adults who do not code have the skill of being able to troubleshoot more quickly than a child.

=== Media

While this book would work just fine as a print book, I believe that presenting it at a mixed-media package would work better for the current generation of students and teachers. A video might be used to reinforce a concept. An embedded coding environment would give a chance for students to play with code, without having to type it in by hand. It would also enable a parent to read one of the sections meant just for them without waiting for the student to reliquish the book.
  
This would also enable us to give the student the assets required for the various projects without sending them to another website. They could click the link, download the files, and get started. 

=== Audience

This book is intended for middle-grade to young-adult students paired with someone who already knows how to code. Because the book leans on scaffolding and partnering, the age range can go as young as eight, but will work for high school age students. Interactive and downloadable code samples help younger coders, who may not have fast or accurate typing. Older students are encouraged to move straight into coding if they feel that they don't need the starter code.

=== Market

The market for teaching kids to code has been heating up in the past few years, with a spike in the past twelve months. Presidents to pop stars have started to push schools to include programming in more STEM programs. Parents have started to leap at every opportunity to get their kids started. When I run Young Coders, we have consistently had three times the number of students on our waitlist than we had in the classroom. Often, this was with almost no promotion and very little lead time.

Schools are slow to catch up, though. Less than 10% of schools offer computer science. Of those schools, the vast majority only start offering it to upperclassmen. Until the 11th grade, most students have never seen a single line of code.

=== Competiton

There are several books on the market that attempt to teach kids how to code. This book, however, will be unique to the market.

First, it will be the first interactive book available. The books currently available are available either in print or in non-interactive eBook format. Letting kids play with code while learning without having to go back and forth between a computer and a book / reader allows for a more organic learning experience.

Second, the other books on the market speak purely to the student. This book will not only teach the student Python, but will help teach the adult _how_ to teach. Places where students often get stuck will be highlighted, and quick answers to complicated questions will be offered. The expert will be coached on how much they should step in and when they should back off and let the student work.

Finally, this will be the only book that will review websites and APIs. The books that are on the market today skip over this type of project, and yet it's one of the most requested projects I get from students (aside from making a Minecraft clone).

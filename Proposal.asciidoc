Coding with your Kid
====================

Practical projects for parents and children to do together
----------------------------------------------------------

Summary:

I spend a good amount of time travelling around the country, teaching kids to code in Python. Parents will often contact me, asking me how they can help their kids learn to code at their side. They want to share something that gives them so much joy and opens so many doors, but many are uncertain where to start. 

There are books that teach children to code, but not every child can learn this way. Some might need to be able to ask questions. Some stay on task better when an adult is involved. Some may simply enjoy the activity better when doing it with someone else. 

This book not only teaches the child to code in Python, but it also teaches the parent *how* to help their child along. Each lesson includes pointers for the parent, a lesson for the child, a project for them both to complete, and code samples of how the code might be written.

This book does assume that the parent is a developer, and teaches the child Python. There will be a brief introduction to Python for the parent coder who is more familiar with another language.

Outline:

* Introduction for kids
** What is coding?
** Why code?
** Why Python?
** What are we going to be doing?
* Introduction for parents
** Who is this book for?
*** If you don't know Python...
** Hands on / Hands off
** Managing your expectations (yours and theirs!)
** The set-up
* Let's get started!
** Install Python
** Learn about IDLE
** Let's do some coding
*** In the shell
*** In a file
* Basics: numbers, strings, math
* Input and output
* If / else
* Loops: For and while
* Project - Number guessing game
** random.int
** if / elif / else
** Loops
* Dictionaries and lists
* Project - To-Do list
** Lists
** Input
** Saving to a file
* Importing modules
* Project - Haiku generator
** Lists
** Reading from a file
** random.choice
* Functions
* Project - Let's write [some dice game]
** random.int
** Loops
** Functions
* Project - Game: Guess that lyric
** Dictionary
** random.choice
** random.shuffle
* OOP
* Project - Game: Virtual pet!
** Time?
** functions
** OOP
* Using PyGame
* Project - Beatbox
** pygame.mixer
* Project - Game: Virtual pet revisited: Let's make it GUI
** PyGame
* Moving to the Internet
* Project - Make a website
** Flask
** functions
* Project - Let's mess around with Minecraft!
** Minecraft
** mcpipy
* Project - Homework helper
** Google API
* Project - Game: Virtual pet revisited: Let's make it GUI
** PyGame
* What now? (For kids)
* What now? (For parents)

Concepts being taught:

* Basics: numbers, strings, math
* Input and output
* If / else
* Dictionaries and lists
* Loops: For and while
* Functions
* OOP
* Importing modules
* Using PyGame
* Talking to the Internet
* HTML basics



Project ideas:

* Haiku generator
  - Lists
  - Reading from a file
  - random.choice
* Number guessing game
  - random.int
  - if / elif / else
  - Loops
* Let's write [some dice game]
  - random.int
  - Loops
* Make a website
  - Flask
  - functions
* Game: Guess that lyric
  - Dictionary
  - random.choice
  - random.shuffle
* Game: Virtual pet!
  - Time?
  - functions
  - OOP
* Game: Virtual pet revisited: Let's make it GUI
  - PyGame
* To-Do list
  - Lists
  - Input
  - Saving to a file
* Something with sound (a beatbox?)
  - pygame.mixer
* Let's mess around with Minecraft!
  - Minecraft
  - mcpipy
* Homework helper?
  - Google API
  
